@*@model IEnumerable<TextMark.Models.Assigned_TextClassifications_ToUsers_TB>*@
@model TextMark.Models.Details_Assigned_TextClassifications_ToUsers
@using Microsoft.AspNetCore.Http;

@{
    ViewData["Title"] = "Assigned Text Classifications to Users - Admin Page";
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}

<h1>List of Assigned Text Classifications to Users</h1>

<form asp-action="Index" asp-controller="Admin_Assigned_TextClassificationsTB">
    <div>
        <div class="form-group flex-row">
            <label>Select a Username: </label>
            @Html.DropDownList("User_ID", new SelectList(ViewBag.Users, "User_ID", "Username"), "Select a User", new { @class = "form-control" })


        </div>
        <div class="flex-row">
            <input type="submit" value="Show Text Classifications" class="btn btn-primary" />
            <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#exampleModal">DELETE</button>
        </div>

    </div>
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">DELETE ALERT !!</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Are you sure to DELETE?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">No, Cancel</button>
                    <button type="submit" value="Delete" class="btn btn-danger" asp-action="DeleteFilter" asp-controller="Admin_Assigned_TextClassificationsTB">YES, DELETE</button>
                </div>
            </div>
        </div>
    </div>
</form>



@if (Model.allClassifications.Count() > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.allClassifications[0].Projects_TB.Project_Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.allClassifications[0].Users_TB.Username)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.allClassifications[0].Annotations_TB.Annotation_Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.allClassifications[0].Annotations_TB.Annotation_Text)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.allClassifications[0].Count_Classifications)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.allClassifications[0].Comments)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.allClassifications[0].Not_Sure)
                </th>

                <th>

                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.allClassifications)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Projects_TB.Project_Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Users_TB.Username)
                    </td>
                    @try
                    {
                        <td>
                            @item.Annotations_TB.Annotation_Title.ToString().Substring(0, 15)...
                        </td>
                    }
                    catch
                    {
                        @item.Annotations_TB.Annotation_Title
                    }

                    @try
                    {
                        <td>
                            @item.Annotations_TB.Annotation_Text.ToString().Substring(0, 25)...
                        </td>
                    }
                    catch
                    {
                        @item.Annotations_TB.Annotation_Text
                    }

                    <td>
                        @Html.DisplayFor(modelItem => item.Count_Classifications)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Comments)
                    </td>
                    <td>
                        @if (item.Not_Sure == true)
                        {
                            <label>Yes</label>
                        }
                        else
                        {
                            <label>No</label>
                        }
                    </td>
                    <td>
                        @*<a asp-action="Edit" asp-route-id="@item.Assigned_Anno_ID">Edit</a> |*@
                        <a class="btn btn-info" asp-action="Details" asp-route-projectID="@item.Project_ID" asp-route-id="@item.Assigned_TextClassification_ID">Details</a>
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Assigned_TextClassification_ID">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<br />
<br />


@if (Model.ClassifiedTexts_Tags.Count() > 0)
{
    <h2> All Classifications Details</h2>
    <table class="table" id="DataTableClassificationsTags">
        <thead>
            <tr>
                @*<th>
            @Html.DisplayNameFor(model => model.ClassifiedTexts_Tags[0].ID)
        </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.ClassifiedTexts_Tags[0].Assigned_TextClassification_ID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ClassifiedTexts_Tags[0].ClassificationLabels_TB.ClassificationLabel_Text)
                </th>
                <th style="display:none;">
                    @Html.DisplayNameFor(model => model.ClassifiedTexts_Tags[0].Assigned_TextClassifications_ToUsers_TB.Projects_TB.Project_Name)
                </th>
                <th style="display:none;">
                    @Html.DisplayNameFor(model => model.ClassifiedTexts_Tags[0].Assigned_TextClassifications_ToUsers_TB.Users_TB.Username)
                </th>
                @*
        <th>
            @Html.DisplayNameFor(model => model.ClassifiedTexts_Tags[0].Label_Start_Index)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Annotated_Tags[0].Label_End_Index)
        </th>
        <th style="display:none;">
            @Html.DisplayNameFor(model => model.Annotated_Tags[0].Assigned_Annotations_ToUsers_TB.User_ID)
        </th>*@
                <th>
                    <a id="btn_dl_json_classifications" class="btn btn-warning btn-lg float-right " asp-action="Export" asp-controller="Admin_Assigned_AnnotationsTB">
                        <span class="glyphicon glyphicon-export" aria-hidden="true"></span> Export
                    </a>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ClassifiedTexts_Tags)
            {
            <tr>
                @*<td>
            @Html.DisplayFor(modelItem => item.ID)
        </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Assigned_TextClassification_ID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ClassificationLabels_TB.ClassificationLabel_Text)
                </td>
                <td style="display:none;">
                    @Html.DisplayFor(modelItem => item.Assigned_TextClassifications_ToUsers_TB.Projects_TB.Project_Name)
                </td>
                <td style="display:none;">
                    @Html.DisplayFor(modelItem => item.Assigned_TextClassifications_ToUsers_TB.Users_TB.Username)
                </td>
                @*
        <td>
            @Html.DisplayFor(modelItem => item.Label_Start_Index)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Label_End_Index)
        </td>
        <td style="display:none;">
            @Html.DisplayFor(modelItem => item.Assigned_Annotations_ToUsers_TB.User_ID)
        </td>*@

            </tr>
            }
        </tbody>
    </table>
}




@section Scripts
{
    <script type="text/javascript">
        function tableToJson(table) {
            var data = [];
            var headers = [];
            for (var i = 0; i < table.rows[0].cells.length; i++) {
                /*headers[i] = table.rows[0].cells[i].innerHTML.toLowerCase().replace(/\s\s+/g, " ");*/
                headers[i] = table.rows[0].cells[i].innerHTML.replace(/\s\s+/g, " ");
            }
            for (var i = 1; i < table.rows.length; i++) {
                var tableRow = table.rows[i];
                var rowData = {};
                for (var j = 0; j < tableRow.cells.length; j++) {
                    /* rowData[headers[j]] = tableRow.cells[j].innerHTML;*/
                    rowData[headers[j]] = tableRow.cells[j].innerHTML.replace(/\s\s+/g, " ");
                }
                data.push(rowData);
            }
            return data;
        }


        function downloadObjectAsJson(exportObj, exportName) {
            var dataStr = "data:text/json;charset-utf-8," + encodeURIComponent(exportObj);
            var downloadAnchorNode = document.createElement('a');
            downloadAnchorNode.setAttribute("href", dataStr);
            downloadAnchorNode.setAttribute("download", exportName + ".json");
            document.body.appendChild(downloadAnchorNode);
            downloadAnchorNode.click();
            downloadAnchorNode.remove();
        }

        document.getElementById('btn_dl_json_classifications').onclick = function () {
            var myjson = JSON.stringify(tableToJson(document.getElementById("DataTableClassificationsTags")));
            //var myjson = htmlToJson(document.getElementById("DataTable"));
            //var myjson = htmlTableToJson(document.getElementById("DataTable"));
            console.log(myjson.replace(/\\n/g, ''));
            downloadObjectAsJson(myjson, 'the-json-file');
        }
    </script>
}
